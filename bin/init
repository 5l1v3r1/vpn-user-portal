#!/usr/bin/php
<?php
/**
 * Copyright 2016 FranÃ§ois Kooman <fkooman@tuxed.net>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
require_once dirname(__DIR__).'/vendor/autoload.php';

use fkooman\Config\Reader;
use fkooman\Config\YamlFile;
use fkooman\OAuth\Storage\PdoAccessTokenStorage;

try {
    // XXX enforce specifying instance, better error handling
    $serverName = $argv[1];

    $reader = new Reader(
        new YamlFile(
            [
                sprintf('%s/config/%s/config.yaml', dirname(__DIR__), $serverName),
                sprintf('%s/config/config.yaml', dirname(__DIR__)),
            ]
        )
    );
    $dataDir = $reader->v('dataDir', true);
    $dbPath = sprintf('%s/%s/access_tokens.sqlite', $dataDir, $serverName);
    // XXX check if dir exists first, fail if not exists and not able to create
    @mkdir(dirname($dbPath), 0700, true);
    $dsn = sprintf('sqlite://%s', $dbPath);
    $accessTokenStorage = new PdoAccessTokenStorage(new PDO($dsn));
    $accessTokenStorage->initDatabase();
} catch (Exception $e) {
    echo sprintf('ERROR: %s', $e->getMessage()).PHP_EOL;
    exit(1);
}
