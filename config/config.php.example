<?php

return [
    // set secureCookie flag, so browser only sends them over HTTPS
    'secureCookie' => true,

    // override default branding style (templates/CSS) with custom style.
    // NOTE: the styling/branding MUST be installed for this to work!
    //'styleName' => 'eduVPN',
    //'styleName' => 'LC',

    'authMethod' => 'FormPdoAuthentication',        // PDO (database)
    //'authMethod' => 'FormLdapAuthentication',     // LDAP
    //'authMethod' => 'FormRadiusAuthentication',   // RADIUS
    //'authMethod' => 'MellonAuthentication',       // SAML (mod_auth_mellon)
    //'authMethod' => 'SamlAuthentication',         // SAML

    // Session Expiry
    // - OAuth (refresh_token) validity
    // - X.509 Client Certificate "Not After" 
    //   (time of authentication + sessionExpiry)
    'sessionExpiry' => 'P90D',
    //'sessionExpiry' => 'P1D',     // 1 day
    //'sessionExpiry' => 'PT12H',   // 12 hours

    // LDAP
    'FormLdapAuthentication' => [
        'ldapUri' => 'ldaps://ipa.example.org',
        // "{{UID}}" will be replaced with the username the user provides
        // on the login page
        'userDnTemplate' => 'uid={{UID}},cn=users,cn=accounts,dc=example,dc=org',
        // Active Directory
        //'userDnTemplate' => 'DOMAIN\{{UID}}',

        // ** AUTHORIZATION | ENTITLEMENT **
        // use eduPerson "eduPersonEntitlement"
        //'entitlementAttribute' => 'eduPersonEntitlement',

        // use LDAP "memberOf"
        //'entitlementAttribute' => 'memberOf',
    ],

    // RADIUS
    'FormRadiusAuthentication' => [
        'serverList' => [
            [
                'host' => 'radius.example.org',
                'secret' => 'testing123',
                //'port' => 1812,
            ],
        ],
        //'addRealm' => 'example.org',
        //'nasIdentifier' => 'vpn.example.org',
    ],

    // SAML
    'MellonAuthentication' => [
        'attribute' => 'MELLON_NAME_ID',
        // 'OID for eduPersonTargetedID
        //'attribute' => 'MELLON_urn:oid:1_3_6_1_4_1_5923_1_1_1_10',
        // OID for eduPersonPrincipalName
        //'attribute' => 'MELLON_urn:oid:1_3_6_1_4_1_5923_1_1_1_6',

        // add the entityID of the IdP to the user ID. This MUST be enabled
        // if multiple IdPs are used *and* the attribute used for the user ID
        // is not enforced to be unique among the different IdPs
        'addEntityID' => false,

        // ** AUTHORIZATION | ENTITLEMENT **
        // OID for eduPersonEntitlement
        //'entitlementAttribute' => 'MELLON_urn:oid:1_3_6_1_4_1_5923_1_1_1_7',
        // OID for eduPersonAffiliation
        //'entitlementAttribute' => 'MELLON_urn:oid:1_3_6_1_4_1_5923_1_1_1_1',
    ],

    // SAML
    'SamlAuthentication' => [
        // 'OID for eduPersonTargetedID
        'attribute' => 'urn:oid:1.3.6.1.4.1.5923.1.1.1.10',
        // OID for eduPersonPrincipalName
        //'attribute' => 'urn:oid:1.3.6.1.4.1.5923.1.1.1.6',

        // add the entityID of the IdP to the user ID. This MUST be enabled
        // if multiple IdPs are used *and* the attribute used for the user ID
        // is not enforced to be unique among the different IdPs
        'addEntityID' => false,

        // ** AUTHORIZATION | ENTITLEMENT **
        // OID for eduPersonEntitlement
        //'entitlementAttribute' => 'urn:oid:1.3.6.1.4.1.5923.1.1.1.7',
        // OID for eduPersonAffiliation
        //'entitlementAttribute' => 'urn:oid:1.3.6.1.4.1.5923.1.1.1.1',

        // set a fixed IdP for use with this service, it MUST be available in
        // the IdP metadata file
        'idpEntityId' => 'https://idp.example.org/saml',

        // set a URL that performs IdP discovery, all IdPs listed in the 
        // discovery service MUST also be available in the IdP metadata file
        //'discoUrl' => 'http://disco.example.org/index.php',

        // list of SAML metadata files containing the IdP metadata that are 
        // allowed to access this service
        'idpMetadata' => [
            '/path/to/idp/metadata.xml',
        ]
    ],

    // Require Users to use 2FA
    'requireTwoFactor' => false,
    //'requireTwoFactor' => true,

    // Available 2FA methods
    'twoFactorMethods' => ['totp'],             // TOTP
    //'twoFactorMethods' => [],                 // 2FA disabled

    // supported languages in the UI, the first one mentioned is the default
    'supportedLanguages' => [
        'en_US' => 'English',
        //'nl_NL' => 'Nederlands',
        //'nb_NO' => 'norsk bokmål',
        //'da_DK' => 'Dansk',
        //'fr_FR' => 'Français',
    ],

    'Api' => [
        'consumerList' => [
            //'_CLIENT_ID_' => [
            //    'redirect_uri_list' => [
            //        '_REDIRECT_URI_1_',
            //        '_REDIRECT_URI_2_',
            //    ],
            //    'display_name' => '_DISPLAY_NAME_',
            //    'require_approval' => true,
            //    'client_secret' => '_SECRET_',
            //],
        ],

        // List of foreign OAuth *PUBLIC* keys of VPN instances for which we
        // want to allow guest usage
        'foreignKeys' => [
            //'vpn.example.org' => 'AABBCC==',
            //'vpn.example.com' => 'BBCCDD==',
        ],

        // Fetch a list of foreign public keys automatically
        //
        // ** Production **
        //'foreignKeyListSource' => 'https://static.eduvpn.nl/disco/secure_internet.json',
        //'foreignKeyListPublicKey' => 'E5On0JTtyUVZmcWd+I/FXRm32nSq8R2ioyW7dcu/U88=',
        //
        // ** Development **
        //'foreignKeyListSource' => 'https://static.eduvpn.nl/disco/secure_internet_dev.json',
        //'foreignKeyListPublicKey' => 'zzls4TZTXHEyV3yxaxag1DZw3tSpIdBoaaOjUGH/Rwg=',
    ],

    // Connection to vpn-server-api
    'apiUser' => 'vpn-user-portal',
    'apiPass' => 'XXX-vpn-user-portal/vpn-server-api-XXX',
    'apiUri' => 'http://localhost/vpn-server-api/api.php',
];
